# auth-service-k8s-standard.yaml
# 包含 Secret, ConfigMap, Deployment, 和 Service for auth-service
# 使用标准 Pod 网络并连接内部/WireGuard IP

apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secret
  namespace: default
type: Opaque
data:
  # spring.datasource.password: LetsvpnUser@2025 (Base64 encoded)
  MYSQL_PASSWORD: TGV0c3ZwblVzZXJAMjAyNQ==
  # 如果 Redis 有密码，也在这里添加 (Base64 编码)
  # REDIS_PASSWORD: <your_redis_password_base64_encoded>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
  namespace: default
data:
  # Spring Boot / Spring Cloud 相关配置
  SPRING_PROFILES_ACTIVE: "prod"
  SPRING_APPLICATION_NAME: "auth-service"

  # Nacos 配置 (使用 k8s Service FQDN)
  SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR: "nacos.default.svc.cluster.local:8848"
  SPRING_CLOUD_NACOS_DISCOVERY_NAMESPACE: "public"
  SPRING_CLOUD_NACOS_DISCOVERY_ENABLED: "true"

  # 数据库配置 (使用 WireGuard 内网 IP)
  SPRING_DATASOURCE_URL: "jdbc:mysql://10.10.0.1:3306/letsvpn?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&characterEncoding=utf8&connectTimeout=3000&socketTimeout=5000&autoReconnect=true" # <--- 修改: 使用内网 IP
  SPRING_DATASOURCE_USERNAME: "letsvpn_user"
  # 密码将从 Secret 注入

  # Redis 配置 (使用 WireGuard 内网 IP)
  SPRING_REDIS_HOST: "10.10.0.1"
  SPRING_REDIS_PORT: "6379"
  # 如果 Redis 有密码，也需要配置 SPRING_REDIS_PASSWORD 并从 Secret 注入

  # JVM 参数 (保持不变)
  JAVA_OPTS: "-Duser.timezone=Asia/Shanghai -Xms256m -Xmx512m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/java_heapdump.hprof"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: default
  labels:
    app: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      # hostNetwork: true # <--- 已移除
      containers:
        - name: auth-service
          image: solosoldier385/auth-service:1.5
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
          envFrom:
            - configMapRef:
                name: auth-service-config
            - secretRef:
                name: auth-service-secret
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
            initialDelaySeconds: 45
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: default
  labels:
    app: auth-service
spec:
  type: ClusterIP
  selector:
    app: auth-service
  ports:
    - name: http
      protocol: TCP
      port: 8081
      targetPort: http

