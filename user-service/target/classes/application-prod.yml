spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/letsvpn?useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: letsvpn_user
    password: LetsvpnUser@2025
    driver-class-name: com.mysql.cj.jdbc.Driver

    hikari:
      maximum-pool-size: 50           # 比原来的 10 大
      minimum-idle: 5
      idle-timeout: 30000             # 空闲连接 30 秒没用就回收
      max-lifetime: 1800000           # 最长连接 30 分钟强制断
      connection-timeout: 30000       # 连接获取最长等待 30 秒
      leak-detection-threshold: 30000  # 30 秒没释放连接就打印日志


  redis:
#    host: 10.10.0.1
    host: 127.0.0.1
    port: 6379

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:/mapper/*.xml


springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true


logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    com.letsvpn.user: DEBUG # 确保你自己的包也是 DEBUG
    com.letsvpn.user.mapper: DEBUG
    com.alibaba.nacos.client.naming: DEBUG
    com.alibaba.nacos.client.config: DEBUG
    com.alibaba.nacos.common.remote: DEBUG # 非常重要，看RPC和连接管理细节
    com.alibaba.nacos.shaded.io.grpc: DEBUG # 最终手段，GRPC自身的详细日志，可能非常多


management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics # 至少包含 health
  endpoint:
    health:
      show-details: always  # 让 /actuator/health 显示具体组件状态
      probes:
        enabled: true
  health:
    readinessstate:
      enabled: true
    livelinessstate: # spring boot 2.3+ 应该是 livenessstate
      enabled: true

app:
  scheduler:
    vip-expiration-check:
      cron: 0 0 1 * * ? # 每天凌晨1点
      # cron: 0 */2 * * * ? # 每2分钟，用于测试
